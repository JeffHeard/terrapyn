// Generated by CoffeeScript 1.7.1
(function() {
  var makeLayerCollectionNode, makeLayerNode, makeNodes, makePageNode, makeResourceNode, makeStyleNode, nodes, onLayerCollectionSelected, onLayerSelected, onNodeSelected, onPageSelected, onResourceSelected, onStyleSelected;

  nodes = {};

  onLayerSelected = function(event, node) {
    return window.open(node.url);
  };

  onLayerCollectionSelected = function(event, node) {
    return window.open(node.url);
  };

  onResourceSelected = function(event, node) {
    return window.open(node.url);
  };

  onStyleSelected = function(event, node) {
    return window.open(node.url);
  };

  onPageSelected = function(event, node) {
    return $.getJSON(node.url, function(n) {
      var ns;
      ns = makeNodes(n);
      nodes[node.url].nodes = ns;
      return $("#terrapyn_page_menu").treeview({
        data: tree
      });
    });
  };

  onNodeSelected = function(event, node) {
    if (node.kind === "layer") {
      return onLayerSelected(event, node);
    } else if (node.kind === "collection") {
      return onLayerCollectionSelected(event, node);
    } else if (node.kind === "resource") {
      return onResourceSelected(event, node);
    } else if (node.kind === "style") {
      return onStyleSelected(event, node);
    } else {
      return onPageSelected(event, node);
    }
  };

  makePageNode = function(n) {
    return nodes[n.url] = {
      text: n.title,
      url: n.url,
      icon: "glyphicon glyphicon-folder-open",
      kind: "page",
      nodes: []
    };
  };

  makeLayerNode = function(n) {
    return nodes[n.url] = {
      text: n.title,
      url: n.url,
      kind: "layer",
      icon: "glyphicon glyphicon-file"
    };
  };

  makeLayerCollectionNode = function(n) {
    return nodes[n.url] = {
      text: n.title,
      url: n.url,
      kind: "collection",
      icon: "glyphicon glyphicon-book"
    };
  };

  makeResourceNode = function(n) {
    return nodes[n.url] = {
      text: n.title,
      url: n.url,
      kind: "resource",
      icon: "glyphicon glyphicon-stats"
    };
  };

  makeStyleNode = function(n) {
    return nodes[n.url] = {
      text: n.title,
      url: n.url,
      kind: "style",
      icon: "glyphicon glyphicon-pencil"
    };
  };

  makeNodes = function(n) {
    var node, x;
    node = makePageNode(n);
    node.nodes = (function() {
      var _i, _len, _ref, _results;
      _ref = n.children;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push(makePageNode(x));
      }
      return _results;
    })();
    node.nodes = node.nodes.concat((function() {
      var _i, _len, _ref, _results;
      _ref = n.layer_collections;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push(makeLayerCollectionNode(x));
      }
      return _results;
    })());
    node.nodes = node.nodes.concat((function() {
      var _i, _len, _ref, _results;
      _ref = n.layers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push(makeLayerNode(x));
      }
      return _results;
    })());
    node.nodes = node.nodes.concat((function() {
      var _i, _len, _ref, _results;
      _ref = n.styles;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push(makeStyleNode(x));
      }
      return _results;
    })());
    node.nodes = node.nodes.concat((function() {
      var _i, _len, _ref, _results;
      _ref = n.data_resources;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        _results.push(makeResourceNode(x));
      }
      return _results;
    })());
    return node;
  };

  $(function() {
    return $.getJSON(PAGE_MENU.endpoint, function(data) {
      return tree.push(makeNodes(data));
    });
  });

}).call(this);

//# sourceMappingURL=terrapyn_page_menu.map
